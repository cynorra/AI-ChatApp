{"ast":null,"code":"const OLLAMA_BASE_URL = 'http://localhost:11434';\nconst MODEL_NAME = 'llama3.2:3b';\nexport class OllamaAPI {\n  static async generateResponse(prompt) {\n    try {\n      const requestBody = {\n        model: MODEL_NAME,\n        prompt,\n        stream: false,\n        context: this.context\n      };\n      const response = await fetch(`${OLLAMA_BASE_URL}/api/generate`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n\n      // Context'i güncelle (sohbet geçmişi için)\n      if (data.context) {\n        this.context = data.context;\n      }\n      return data.response || 'Üzgünüm, bir hata oluştu.';\n    } catch (error) {\n      console.error('Ollama API Error:', error);\n      throw new Error('Bağlantı hatası! Ollama servisinizin çalıştığından emin olun.');\n    }\n  }\n  static async checkHealth() {\n    try {\n      const response = await fetch(`${OLLAMA_BASE_URL}/api/tags`);\n      return response.ok;\n    } catch {\n      return false;\n    }\n  }\n  static clearContext() {\n    this.context = [];\n  }\n}\nOllamaAPI.context = [];","map":{"version":3,"names":["OLLAMA_BASE_URL","MODEL_NAME","OllamaAPI","generateResponse","prompt","requestBody","model","stream","context","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","error","console","checkHealth","clearContext"],"sources":["C:/Users/erens/Desktop/aichat/src/services/ollamaAPI.ts"],"sourcesContent":["import { OllamaRequest, OllamaResponse } from '../types';\r\n\r\nconst OLLAMA_BASE_URL = 'http://localhost:11434';\r\nconst MODEL_NAME = 'llama3.2:3b';\r\n\r\nexport class OllamaAPI {\r\n  private static context: number[] = [];\r\n\r\n  static async generateResponse(prompt: string): Promise<string> {\r\n    try {\r\n      const requestBody: OllamaRequest = {\r\n        model: MODEL_NAME,\r\n        prompt,\r\n        stream: false,\r\n        context: this.context\r\n      };\r\n\r\n      const response = await fetch(`${OLLAMA_BASE_URL}/api/generate`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(requestBody),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const data: OllamaResponse = await response.json();\r\n      \r\n      // Context'i güncelle (sohbet geçmişi için)\r\n      if (data.context) {\r\n        this.context = data.context;\r\n      }\r\n\r\n      return data.response || 'Üzgünüm, bir hata oluştu.';\r\n    } catch (error) {\r\n      console.error('Ollama API Error:', error);\r\n      throw new Error('Bağlantı hatası! Ollama servisinizin çalıştığından emin olun.');\r\n    }\r\n  }\r\n\r\n  static async checkHealth(): Promise<boolean> {\r\n    try {\r\n      const response = await fetch(`${OLLAMA_BASE_URL}/api/tags`);\r\n      return response.ok;\r\n    } catch {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  static clearContext(): void {\r\n    this.context = [];\r\n  }\r\n}"],"mappings":"AAEA,MAAMA,eAAe,GAAG,wBAAwB;AAChD,MAAMC,UAAU,GAAG,aAAa;AAEhC,OAAO,MAAMC,SAAS,CAAC;EAGrB,aAAaC,gBAAgBA,CAACC,MAAc,EAAmB;IAC7D,IAAI;MACF,MAAMC,WAA0B,GAAG;QACjCC,KAAK,EAAEL,UAAU;QACjBG,MAAM;QACNG,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE,IAAI,CAACA;MAChB,CAAC;MAED,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGV,eAAe,eAAe,EAAE;QAC9DW,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,WAAW;MAClC,CAAC,CAAC;MAEF,IAAI,CAACI,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBR,QAAQ,CAACS,MAAM,EAAE,CAAC;MAC3D;MAEA,MAAMC,IAAoB,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;;MAElD;MACA,IAAID,IAAI,CAACX,OAAO,EAAE;QAChB,IAAI,CAACA,OAAO,GAAGW,IAAI,CAACX,OAAO;MAC7B;MAEA,OAAOW,IAAI,CAACV,QAAQ,IAAI,2BAA2B;IACrD,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MACzC,MAAM,IAAIJ,KAAK,CAAC,+DAA+D,CAAC;IAClF;EACF;EAEA,aAAaM,WAAWA,CAAA,EAAqB;IAC3C,IAAI;MACF,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGV,eAAe,WAAW,CAAC;MAC3D,OAAOS,QAAQ,CAACO,EAAE;IACpB,CAAC,CAAC,MAAM;MACN,OAAO,KAAK;IACd;EACF;EAEA,OAAOQ,YAAYA,CAAA,EAAS;IAC1B,IAAI,CAAChB,OAAO,GAAG,EAAE;EACnB;AACF;AAlDaN,SAAS,CACLM,OAAO,GAAa,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}